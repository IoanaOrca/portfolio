---
import { Image } from 'astro:assets';
import BaseLayout from '@layouts/BaseLayout.astro';
import Section from '@components/Section.astro';
const { data } = Astro.props; // TODO typing

const images = import.meta.glob<ImageMetadata>('/src/assets/cooking/*', { import: 'default' });
const img = await images[`/src/assets/cooking/${data?.image?.src || 'cooking.svg'}`]();
---

<BaseLayout title={data.title}>
  <header>
    <div class="hero bg-base-200 text-base">
      <div class="hero-content flex-col lg:flex-row gap-8 px-8 py-16">
        <div class="avatar">
          <div class="max-w-xs rounded-lg shadow-lg">
            <Image
              src={img}
              alt={data?.image?.alt || ''}
            />
          </div>
        </div>
        <div class="max-w-md flex flex-col gap-6">
          <h1 class="text-5xl font-bold">{ data.title }</h1>
          <p class="">{data.description}</p>
        </div>
      </div>
    </div>
  </header>

  <Section class="prose mx-auto">

    <time datetime={ data.date.toISOString() } class="font-light">
      { data.date.toLocaleDateString() }
    </time>

    {!!data.tags?.length &&
      <ul class="flex flex-wrap gap-2 pl-0">
        {
          data.tags.map(tag => (
            <li class="badge badge-accent">
              { tag }
            </li>
          ))
        }
      </ul>
    }

    <h2 id="ingredients">Ingredients</h2>

    {!!data.ingredients?.length && data.ingredients.map(ingredient => (
      <h3 class="opacity-80">{ingredient.title}</h3>
      <div class="overflow-x-auto">
        <table class="table table-zebra w-full">
          <thead>
            <tr>
              <th>Ingredient</th>
              <th>Quantity</th>
            </tr>
          </thead>
          <tbody>
            {
              ingredient.list.map(item => (
                <tr>
                  <td>
                    { item.name }
                  </td>
                  <td>
                    { item.quantity }
                  </td>
                </tr>
              ))
            }
          </tbody>
        </table>
      </div>
    ))}

    <slot />

  </Section>
</BaseLayout>

<!-- <style define:vars={{ bgImage: `url("${img.src}")` }}>
  .hero-image {
    position: relative;
    overflow: visible !important;
  }
  .hero-image::after {
    content: "";
    position: absolute;
    inset: 0;
    background-image: var(--bgImage);
    background-position: center center;
    background-size: cover;
    filter: blur(2em);
    z-index: -1;
  }
</style> -->
